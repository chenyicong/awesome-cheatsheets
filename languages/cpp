基类当接口类，实现子类集成的多态：
class RateLimiterInterface {
public:
    virtual ~RateLimiterInterface() {}

    virtual long aquire() = 0;
    virtual long aquire(int permits) = 0;

    virtual bool try_aquire(int timeout) = 0;
    virtual bool try_aquire(int permits, int timeout) = 0;

    virtual double get_rate() const = 0;
    virtual void set_rate(double rate) = 0;
};

2、接口与实现分离：
class Weight;

class WeightProxy
{
public:
    WeightProxy();
    ~WeightProxy();
    std::string GetInfo();
    std::unique_ptr<Weight> m_proxy;
};
